on:
    push:
      branches:
        - release*

name: CD

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
        - name: Install poetry
          uses: abatilo/actions-poetry@v2
        - name: Setup a local virtual environment
          run: |
            poetry config virtualenvs.create true --local
            poetry config virtualenvs.in-project true --local
        - uses: actions/cache@v3
          name: Define a cache for the virtual environment based on the dependencies lock file
          with:
            path: ./.venv
            key: venv-${{ hashFiles('poetry.lock') }}
        - name: Install the project dependencies
          run: poetry install
        - run: poetry build
    publish-to-pypi:
        name: Publish Python üêç distribution üì¶ to PyPI
        if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
        needs:
        - build
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/persistent_data_structures  # Replace <package-name> with your PyPI project name
        permissions:
            id-token: write  # IMPORTANT: mandatory for trusted publishing
        
        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution üì¶ to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1


